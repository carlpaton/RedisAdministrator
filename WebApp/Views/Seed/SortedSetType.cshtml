@model SeedSortedSetTypeViewModel

@{
    ViewData["Title"] = "Sorted Set Type";
}
<h1>@ViewData["Title"]</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Seed" asp-action="Index">Seed Help</a></li>
        <li class="breadcrumb-item active" aria-current="page">Sorted Set Type</li>
    </ol>
</nav>

<p>
    This will insert <code>n</code> number of keys with values as serialized instances of <a href="https://github.com/carlpaton/RedisAdministrator/blob/master/Common/DummyData/DummyClass.cs" target="_blank">DummyClass</a> using the <code>set</code> command. If the key exists it is replaced regardless of its type.
</p>
<p>
    Suggested redis keys are `object-type:id`, for this insert I used `1:2:seed_sorted_set` where 1 iterates to the given <code>n</code> and 2 is just 1++.
</p>

<form asp-action="Index" asp-controller="SeedStringType" method="post">
    <div class="form-group row">
        <label asp-for="NumberOfKeys" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="NumberOfKeys" class="form-control" />
            <span asp-validation-for="NumberOfKeys" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="NumberOfValuesInKey" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="NumberOfValuesInKey" class="form-control" />
            <span asp-validation-for="NumberOfValuesInKey" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <input type="submit" value="Insert" class="btn btn-primary" />
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <partial name="~/Views/Shared/_TempDataMessage.cshtml" />
        </div>
    </div>
</form>

<h2>Example</h2>

<pre>
    <code>
        &gt; ZADD myzset 1 "one"
        (integer) 1
        &gt; ZADD myzset 1 "uno"
        (integer) 1
        &gt; ZADD myzset 2 "two" 3 "three"
        (integer) 2
        &gt; ZRANGE myzset 0 -1 WITHSCORES
        1) "one"
        2) "1"
        3) "uno"
        4) "1"
        5) "two"
        6) "2"
        7) "three"
        8) "3"
    </code>
</pre>

<h2>References</h2>

<ul>
    <li><a href="https://redis.io/commands/zadd" target="_blank">ZADD</a></li>
</ul>