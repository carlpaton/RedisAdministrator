@model SelectListViewModel

@{
    ViewData["Title"] = "Search";
}
<h1>@ViewData["Title"]</h1>

<p>
    This will search on the given string using the <code>SCAN</code> command which is none blocking unlike the <code>KEYS</code>.
</p>
<p>
    You can search on an exact match, example: `1:2:seed_string` or on partial, example: `1:*`. For performance the max results are soft limited to 1000 (dependant on the database cursor value)
</p>

<form asp-action="Index" asp-controller="SelectList" method="post">
    <div class="form-group row">
        <label asp-for="SearchOnKey" class="col-sm-2 col-form-label"></label>

        <div class="col-sm-10">
            <input asp-for="SearchOnKey" class="form-control" />
            <span asp-validation-for="SearchOnKey" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <partial name="~/Views/Shared/_TempDataMessage.cshtml" />
        </div>
    </div>
</form>

@if (Model != null && Model.Result != null)
{
    <h2>Search Results</h2>

    <span>Found <strong>@Html.Raw(Model.ResultCount)</strong> key(s):</span>
    <p>
        <span style="white-space: pre-line">@Html.Raw(Model.Result)</span>
    </p>
}

<h2>Example</h2>

<pre>
<code>
        &gt; sadd myset 1 2 3 foo foobar feelsgood
        (integer) 6
        &gt; sscan myset 0 match f*
        1) "0"
        2) 1) "foo"
           2) "feelsgood"
           3) "foobar"
    </code>
</pre>

<h2>References</h2>

<ul>
    <li><a href="https://redis.io/commands/scan" target="_blank">Redis SCAN</a></li>
    <li><a href="https://redis.io/commands/keys" target="_blank">Redis KEYS</a></li>
</ul>

<div id="dialog" style="z-index: 1050!important;" title="Zoom On Key">
    <div id="divResults">
        <partial name="~/Views/SelectList/_ZoomOnKey.cshtml" model="new WebApp.Models.ZoomViewModels()" />
    </div>
</div>

<style type="text/css">
    .keyResult:hover {
        cursor: pointer;
        text-decoration: underline;
        color: #007bff;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        $("#dialog").dialog({
            autoOpen: false,
            height: 400,
            width: 600,
            draggable: false,
            resizable: false,
            dialogClass: 'dialog',
            open: function () {
                $(this).scrollTop(0);
            },
            buttons: [
                {
                    text: "DELETE",
                    click: function () {
                        alert("Not yet implemented");
                        $("#dialog").dialog("close");
                    }
                },
                {
                    text: "CLOSE",
                    click: function () {
                        $("#dialog").dialog("close");
                    }
                }
            ]
        });
        $(".keyResult").click(function () {
            KeyClick($(this).text());
        });
    });
    function KeyClick(key)
    {
        $('#divResults').load("@Url.Action("ZoomOnKey")" + "?key=" + key);
        $("#dialog").dialog("open");
    }
</script>