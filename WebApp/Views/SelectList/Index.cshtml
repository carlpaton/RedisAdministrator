@model SelectListViewModel

@{
    ViewData["Title"] = "Search";
}

<style type="text/css">
    .keyResult:hover {
        cursor: pointer;
        text-decoration: underline;
        color: #007bff;
    }
    .keyResults {
        max-height: 600px;
        overflow: auto;
    }
    .modal-dialog {
        margin: 1.75rem auto;
        max-width: 50vw;
    }
</style>

<h1>@ViewData["Title"]</h1>

<p>
    This will search on the given string using the <code>SCAN</code> command which is none blocking unlike the <code>KEYS</code> command.
</p>
<p>
    You can search on an exact match, example: <code>1:2:seed_string</code> or on partial, example: <code>1:*</code>
</p>
<p>
    If you have no idea just search with <code>*</code> ... for performance the max results are soft limited to 1000. (dependant on the database cursor value)
</p>

<form asp-action="Index" asp-controller="SelectList" method="post">
    <div class="form-group row">
        <label asp-for="SearchOnKey" class="col-sm-2 col-form-label"></label>

        <div class="col-sm-10">
            <input asp-for="SearchOnKey" class="form-control" />
            <span asp-validation-for="SearchOnKey" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-2 col-sm-10">
            <partial name="~/Views/Shared/_TempDataMessage.cshtml" />
        </div>
    </div>
</form>

@if (Model != null && Model.Result != null)
{
    <h2>Search Results</h2>

    <span>Found <strong>@Html.Raw(Model.ResultCount)</strong> key(s):</span>
    <div class="keyResults my-3">
        @Html.Raw(Model.Result)
    </div>
}

<h2>Example</h2>

<pre>
<code>
        &gt; sadd myset 1 2 3 foo foobar feelsgood
        (integer) 6
        &gt; sscan myset 0 match f*
        1) "0"
        2) 1) "foo"
           2) "feelsgood"
           3) "foobar"
    </code>
</pre>

<h2>References</h2>

<ul>
    <li><a href="https://redis.io/commands/scan" target="_blank">SCAN</a></li>
    <li><a href="https://redis.io/commands/keys" target="_blank">KEYS</a></li>
    <li><a href="https://redis.io/commands/type" target="_blank">TYPE</a></li>
    <li><a href="https://redis.io/commands/get" target="_blank">GET (Read value of `Sting` type)</a></li>
</ul>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Zoom on key</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="divResults">
                    <partial name="~/Views/SelectList/_ZoomOnKey.cshtml" model="new WebApp.Models.ZoomViewModels()" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $(".keyResult").on('click', function () {
                $('#divResults').load("@Url.Action("ZoomOnKey")" + "?key=" + $(this).data('key'));
            });
        });
    </script>
}